/*!
 * devextreme-angular
 * Version: 23.2.11
 * Build date: Mon Dec 16 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { NestedOption } from 'devextreme-angular/core';
import { Component, } from '@angular/core';
import * as i0 from "@angular/core";
export class DxoHtmlEditorImageUpload extends NestedOption {
    get fileUploaderOptions() {
        return this._getOption('fileUploaderOptions');
    }
    set fileUploaderOptions(value) {
        this._setOption('fileUploaderOptions', value);
    }
    get fileUploadMode() {
        return this._getOption('fileUploadMode');
    }
    set fileUploadMode(value) {
        this._setOption('fileUploadMode', value);
    }
    get tabs() {
        return this._getOption('tabs');
    }
    set tabs(value) {
        this._setOption('tabs', value);
    }
    get uploadDirectory() {
        return this._getOption('uploadDirectory');
    }
    set uploadDirectory(value) {
        this._setOption('uploadDirectory', value);
    }
    get uploadUrl() {
        return this._getOption('uploadUrl');
    }
    set uploadUrl(value) {
        this._setOption('uploadUrl', value);
    }
}
/** @nocollapse */ DxoHtmlEditorImageUpload.ɵfac = /** @pureOrBreakMyCode */ function () { let ɵDxoHtmlEditorImageUpload_BaseFactory; return function DxoHtmlEditorImageUpload_Factory(t) { return (ɵDxoHtmlEditorImageUpload_BaseFactory || (ɵDxoHtmlEditorImageUpload_BaseFactory = i0.ɵɵgetInheritedFactory(DxoHtmlEditorImageUpload)))(t || DxoHtmlEditorImageUpload); }; }();
/** @nocollapse */ DxoHtmlEditorImageUpload.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxoHtmlEditorImageUpload, selectors: [["ng-component"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHtmlEditorImageUpload_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoHtmlEditorImageUpload, [{
        type: Component,
        args: [{
                template: ''
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbC1lZGl0b3ItaW1hZ2UtdXBsb2FkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZGlzdC91aS9uZXN0ZWQvYmFzZS9odG1sLWVkaXRvci1pbWFnZS11cGxvYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFFSCxvQ0FBb0M7QUFFcEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFDSCxTQUFTLEdBQ1osTUFBTSxlQUFlLENBQUM7O0FBU3ZCLE1BQU0sT0FBZ0Isd0JBQXlCLFNBQVEsWUFBWTtJQUMvRCxJQUFJLG1CQUFtQjtRQUNuQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBQ0QsSUFBSSxtQkFBbUIsQ0FBQyxLQUE0QjtRQUNoRCxJQUFJLENBQUMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCxJQUFJLGNBQWM7UUFDZCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBQ0QsSUFBSSxjQUFjLENBQUMsS0FBZ0M7UUFDL0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFJLElBQUksQ0FBQyxLQUFxRjtRQUMxRixJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsSUFBSSxlQUFlO1FBQ2YsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUNELElBQUksZUFBZSxDQUFDLEtBQXlCO1FBQ3pDLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELElBQUksU0FBUztRQUNULE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBQ0QsSUFBSSxTQUFTLENBQUMsS0FBeUI7UUFDbkMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7K1NBbENpQix3QkFBd0IsU0FBeEIsd0JBQXdCOzBHQUF4Qix3QkFBd0I7dUZBQXhCLHdCQUF3QjtjQUg3QyxTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLEVBQUU7YUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKiBWZXJzaW9uOiAyMy4yLjExXG4gKiBCdWlsZCBkYXRlOiBNb24gRGVjIDE2IDIwMjRcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDI0IERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxuICpcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG5cbmltcG9ydCB7IE5lc3RlZE9wdGlvbiB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IERldkV4cHJlc3MgZnJvbSAnZGV2ZXh0cmVtZS9idW5kbGVzL2R4LmFsbCc7XG5pbXBvcnQgeyBkeEZpbGVVcGxvYWRlck9wdGlvbnMgfSBmcm9tICdkZXZleHRyZW1lL3VpL2ZpbGVfdXBsb2FkZXInO1xuaW1wb3J0IHsgSHRtbEVkaXRvckltYWdlVXBsb2FkTW9kZSwgSHRtbEVkaXRvckltYWdlVXBsb2FkVGFiIH0gZnJvbSAnZGV2ZXh0cmVtZS91aS9odG1sX2VkaXRvcic7XG5cbkBDb21wb25lbnQoe1xuICAgIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBEeG9IdG1sRWRpdG9ySW1hZ2VVcGxvYWQgZXh0ZW5kcyBOZXN0ZWRPcHRpb24ge1xuICAgIGdldCBmaWxlVXBsb2FkZXJPcHRpb25zKCk6IGR4RmlsZVVwbG9hZGVyT3B0aW9ucyB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2ZpbGVVcGxvYWRlck9wdGlvbnMnKTtcbiAgICB9XG4gICAgc2V0IGZpbGVVcGxvYWRlck9wdGlvbnModmFsdWU6IGR4RmlsZVVwbG9hZGVyT3B0aW9ucykge1xuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2ZpbGVVcGxvYWRlck9wdGlvbnMnLCB2YWx1ZSk7XG4gICAgfVxuXG4gICAgZ2V0IGZpbGVVcGxvYWRNb2RlKCk6IEh0bWxFZGl0b3JJbWFnZVVwbG9hZE1vZGUge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdmaWxlVXBsb2FkTW9kZScpO1xuICAgIH1cbiAgICBzZXQgZmlsZVVwbG9hZE1vZGUodmFsdWU6IEh0bWxFZGl0b3JJbWFnZVVwbG9hZE1vZGUpIHtcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdmaWxlVXBsb2FkTW9kZScsIHZhbHVlKTtcbiAgICB9XG5cbiAgICBnZXQgdGFicygpOiBBcnJheTxIdG1sRWRpdG9ySW1hZ2VVcGxvYWRUYWIgfCBEZXZFeHByZXNzLnVpLmR4SHRtbEVkaXRvckltYWdlVXBsb2FkVGFiSXRlbT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCd0YWJzJyk7XG4gICAgfVxuICAgIHNldCB0YWJzKHZhbHVlOiBBcnJheTxIdG1sRWRpdG9ySW1hZ2VVcGxvYWRUYWIgfCBEZXZFeHByZXNzLnVpLmR4SHRtbEVkaXRvckltYWdlVXBsb2FkVGFiSXRlbT4pIHtcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCd0YWJzJywgdmFsdWUpO1xuICAgIH1cblxuICAgIGdldCB1cGxvYWREaXJlY3RvcnkoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbigndXBsb2FkRGlyZWN0b3J5Jyk7XG4gICAgfVxuICAgIHNldCB1cGxvYWREaXJlY3RvcnkodmFsdWU6IHN0cmluZyB8IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ3VwbG9hZERpcmVjdG9yeScsIHZhbHVlKTtcbiAgICB9XG5cbiAgICBnZXQgdXBsb2FkVXJsKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ3VwbG9hZFVybCcpO1xuICAgIH1cbiAgICBzZXQgdXBsb2FkVXJsKHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCd1cGxvYWRVcmwnLCB2YWx1ZSk7XG4gICAgfVxufVxuIl19