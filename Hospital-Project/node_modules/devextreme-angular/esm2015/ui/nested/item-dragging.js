/*!
 * devextreme-angular
 * Version: 23.2.11
 * Build date: Mon Dec 16 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoSortableOptions } from './base/sortable-options';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoItemDraggingComponent extends DxoSortableOptions {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'itemDragging';
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
}
/** @nocollapse */ DxoItemDraggingComponent.ɵfac = function DxoItemDraggingComponent_Factory(t) { return new (t || DxoItemDraggingComponent)(i0.ɵɵdirectiveInject(i1.NestedOptionHost, 5), i0.ɵɵdirectiveInject(i1.NestedOptionHost, 1)); };
/** @nocollapse */ DxoItemDraggingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxoItemDraggingComponent, selectors: [["dxo-item-dragging"]], inputs: { allowDropInsideItem: "allowDropInsideItem", allowReordering: "allowReordering", autoScroll: "autoScroll", boundary: "boundary", container: "container", cursorOffset: "cursorOffset", data: "data", dragDirection: "dragDirection", dragTemplate: "dragTemplate", dropFeedbackMode: "dropFeedbackMode", elementAttr: "elementAttr", filter: "filter", group: "group", handle: "handle", height: "height", itemOrientation: "itemOrientation", moveItemOnDrop: "moveItemOnDrop", onAdd: "onAdd", onDisposing: "onDisposing", onDragChange: "onDragChange", onDragEnd: "onDragEnd", onDragMove: "onDragMove", onDragStart: "onDragStart", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onRemove: "onRemove", onReorder: "onReorder", rtlEnabled: "rtlEnabled", scrollSensitivity: "scrollSensitivity", scrollSpeed: "scrollSpeed", width: "width" }, features: [i0.ɵɵProvidersFeature([NestedOptionHost]), i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoItemDraggingComponent_Template(rf, ctx) { }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoItemDraggingComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-item-dragging',
                template: '',
                styles: [''],
                providers: [NestedOptionHost],
                inputs: [
                    'allowDropInsideItem',
                    'allowReordering',
                    'autoScroll',
                    'boundary',
                    'container',
                    'cursorOffset',
                    'data',
                    'dragDirection',
                    'dragTemplate',
                    'dropFeedbackMode',
                    'elementAttr',
                    'filter',
                    'group',
                    'handle',
                    'height',
                    'itemOrientation',
                    'moveItemOnDrop',
                    'onAdd',
                    'onDisposing',
                    'onDragChange',
                    'onDragEnd',
                    'onDragMove',
                    'onDragStart',
                    'onInitialized',
                    'onOptionChanged',
                    'onRemove',
                    'onReorder',
                    'rtlEnabled',
                    'scrollSensitivity',
                    'scrollSpeed',
                    'width'
                ]
            }]
    }], function () { return [{ type: i1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: i1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
export class DxoItemDraggingModule {
}
/** @nocollapse */ DxoItemDraggingModule.ɵfac = function DxoItemDraggingModule_Factory(t) { return new (t || DxoItemDraggingModule)(); };
/** @nocollapse */ DxoItemDraggingModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxoItemDraggingModule });
/** @nocollapse */ DxoItemDraggingModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoItemDraggingModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoItemDraggingComponent
                ],
                exports: [
                    DxoItemDraggingComponent
                ],
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxoItemDraggingModule, { declarations: [DxoItemDraggingComponent], exports: [DxoItemDraggingComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS1kcmFnZ2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Rpc3QvdWkvbmVzdGVkL2l0ZW0tZHJhZ2dpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFFSCxvQ0FBb0M7QUFFcEMsaURBQWlEO0FBRWpELE9BQU8sRUFDSCxTQUFTLEVBR1QsUUFBUSxFQUNSLElBQUksRUFDSixRQUFRLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFNdkIsT0FBTyxFQUNILGdCQUFnQixHQUNuQixNQUFNLHlCQUF5QixDQUFDO0FBQ2pDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7QUEwQzdELE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxrQkFBa0I7SUFPNUQsWUFBZ0MsZ0JBQWtDLEVBQ2xELFVBQTRCO1FBQ3hDLEtBQUssRUFBRSxDQUFDO1FBQ1IsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQVZELElBQWMsV0FBVztRQUNyQixPQUFPLGNBQWMsQ0FBQztJQUMxQixDQUFDO0lBV0QsUUFBUTtRQUNKLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0lBQ2xELENBQUM7O21IQXJCUSx3QkFBd0I7MEdBQXhCLHdCQUF3QiwyNUJBbkN0QixDQUFDLGdCQUFnQixDQUFDO3VGQW1DcEIsd0JBQXdCO2NBdkNwQyxTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsUUFBUSxFQUFFLEVBQUU7Z0JBQ1osTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO2dCQUNaLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDO2dCQUM3QixNQUFNLEVBQUU7b0JBQ0oscUJBQXFCO29CQUNyQixpQkFBaUI7b0JBQ2pCLFlBQVk7b0JBQ1osVUFBVTtvQkFDVixXQUFXO29CQUNYLGNBQWM7b0JBQ2QsTUFBTTtvQkFDTixlQUFlO29CQUNmLGNBQWM7b0JBQ2Qsa0JBQWtCO29CQUNsQixhQUFhO29CQUNiLFFBQVE7b0JBQ1IsT0FBTztvQkFDUCxRQUFRO29CQUNSLFFBQVE7b0JBQ1IsaUJBQWlCO29CQUNqQixnQkFBZ0I7b0JBQ2hCLE9BQU87b0JBQ1AsYUFBYTtvQkFDYixjQUFjO29CQUNkLFdBQVc7b0JBQ1gsWUFBWTtvQkFDWixhQUFhO29CQUNiLGVBQWU7b0JBQ2YsaUJBQWlCO29CQUNqQixVQUFVO29CQUNWLFdBQVc7b0JBQ1gsWUFBWTtvQkFDWixtQkFBbUI7b0JBQ25CLGFBQWE7b0JBQ2IsT0FBTztpQkFDVjthQUNKOztzQkFRZ0IsUUFBUTs7c0JBQUksSUFBSTs7c0JBQ3BCLElBQUk7O0FBMEJqQixNQUFNLE9BQU8scUJBQXFCOzs2R0FBckIscUJBQXFCO3NHQUFyQixxQkFBcUI7O3VGQUFyQixxQkFBcUI7Y0FSakMsUUFBUTtlQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWix3QkFBd0I7aUJBQ3pCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCx3QkFBd0I7aUJBQ3pCO2FBQ0Y7O3dGQUNZLHFCQUFxQixtQkFsQ3JCLHdCQUF3QixhQUF4Qix3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxuICogVmVyc2lvbjogMjMuMi4xMVxuICogQnVpbGQgZGF0ZTogTW9uIERlYyAxNiAyMDI0XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyNCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcbiAqXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXG5cbmltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxuICAgIE9uSW5pdCxcbiAgICBPbkRlc3Ryb3ksXG4gICAgTmdNb2R1bGUsXG4gICAgSG9zdCxcbiAgICBTa2lwU2VsZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG5cblxuXG5pbXBvcnQge1xuICAgIE5lc3RlZE9wdGlvbkhvc3QsXG59IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IER4b1NvcnRhYmxlT3B0aW9ucyB9IGZyb20gJy4vYmFzZS9zb3J0YWJsZS1vcHRpb25zJztcblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2R4by1pdGVtLWRyYWdnaW5nJyxcbiAgICB0ZW1wbGF0ZTogJycsXG4gICAgc3R5bGVzOiBbJyddLFxuICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxuICAgIGlucHV0czogW1xuICAgICAgICAnYWxsb3dEcm9wSW5zaWRlSXRlbScsXG4gICAgICAgICdhbGxvd1Jlb3JkZXJpbmcnLFxuICAgICAgICAnYXV0b1Njcm9sbCcsXG4gICAgICAgICdib3VuZGFyeScsXG4gICAgICAgICdjb250YWluZXInLFxuICAgICAgICAnY3Vyc29yT2Zmc2V0JyxcbiAgICAgICAgJ2RhdGEnLFxuICAgICAgICAnZHJhZ0RpcmVjdGlvbicsXG4gICAgICAgICdkcmFnVGVtcGxhdGUnLFxuICAgICAgICAnZHJvcEZlZWRiYWNrTW9kZScsXG4gICAgICAgICdlbGVtZW50QXR0cicsXG4gICAgICAgICdmaWx0ZXInLFxuICAgICAgICAnZ3JvdXAnLFxuICAgICAgICAnaGFuZGxlJyxcbiAgICAgICAgJ2hlaWdodCcsXG4gICAgICAgICdpdGVtT3JpZW50YXRpb24nLFxuICAgICAgICAnbW92ZUl0ZW1PbkRyb3AnLFxuICAgICAgICAnb25BZGQnLFxuICAgICAgICAnb25EaXNwb3NpbmcnLFxuICAgICAgICAnb25EcmFnQ2hhbmdlJyxcbiAgICAgICAgJ29uRHJhZ0VuZCcsXG4gICAgICAgICdvbkRyYWdNb3ZlJyxcbiAgICAgICAgJ29uRHJhZ1N0YXJ0JyxcbiAgICAgICAgJ29uSW5pdGlhbGl6ZWQnLFxuICAgICAgICAnb25PcHRpb25DaGFuZ2VkJyxcbiAgICAgICAgJ29uUmVtb3ZlJyxcbiAgICAgICAgJ29uUmVvcmRlcicsXG4gICAgICAgICdydGxFbmFibGVkJyxcbiAgICAgICAgJ3Njcm9sbFNlbnNpdGl2aXR5JyxcbiAgICAgICAgJ3Njcm9sbFNwZWVkJyxcbiAgICAgICAgJ3dpZHRoJ1xuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgRHhvSXRlbURyYWdnaW5nQ29tcG9uZW50IGV4dGVuZHMgRHhvU29ydGFibGVPcHRpb25zIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQgIHtcblxuICAgIHByb3RlY3RlZCBnZXQgX29wdGlvblBhdGgoKSB7XG4gICAgICAgIHJldHVybiAnaXRlbURyYWdnaW5nJztcbiAgICB9XG5cblxuICAgIGNvbnN0cnVjdG9yKEBTa2lwU2VsZigpIEBIb3N0KCkgcGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCxcbiAgICAgICAgICAgIEBIb3N0KCkgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KHRoaXMsIHRoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQodGhpcykpO1xuICAgIH1cblxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuX2FkZFJlY3JlYXRlZENvbXBvbmVudCgpO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLl9hZGRSZW1vdmVkT3B0aW9uKHRoaXMuX2dldE9wdGlvblBhdGgoKSk7XG4gICAgfVxuXG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRHhvSXRlbURyYWdnaW5nQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBEeG9JdGVtRHJhZ2dpbmdDb21wb25lbnRcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRHhvSXRlbURyYWdnaW5nTW9kdWxlIHsgfVxuIl19