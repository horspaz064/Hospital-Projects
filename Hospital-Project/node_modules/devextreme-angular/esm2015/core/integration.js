/*!
 * devextreme-angular
 * Version: 23.2.11
 * Build date: Mon Dec 16 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { NgModule, Inject, NgZone, Optional, VERSION, } from '@angular/core';
import { DOCUMENT, XhrFactory } from '@angular/common';
import httpRequest from 'devextreme/core/http_request';
import domAdapter from 'devextreme/core/dom_adapter';
import readyCallbacks from 'devextreme/core/utils/ready_callbacks';
import eventsEngine from 'devextreme/events/core/events_engine';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const outsideZoneEvents = ['mousemove', 'mouseover', 'mouseout'];
const insideZoneEvents = ['mouseup', 'click', 'mousedown', 'transitionend', 'wheel'];
let originalAdd;
let callbacks = [];
let readyCallbackAdd = function (callback) {
    if (!originalAdd) {
        originalAdd = this.callBase.bind(this);
    }
    callbacks.push(callback);
};
readyCallbacks.inject({
    add(callback) {
        return readyCallbackAdd.call(this, callback);
    },
});
let doInjections = (document, ngZone, xhrFactory) => {
    if (Number(VERSION.major) < 12) {
        console.warn('Your version of Angular is not supported. Please update your project to version 12 or later.'
            + ' Please refer to the Angular Update Guide for more information: https://update.angular.io');
    }
    domAdapter.inject({
        _document: document,
        listen(...args) {
            const eventName = args[1];
            if (outsideZoneEvents.includes(eventName)) {
                return ngZone.runOutsideAngular(() => this.callBase.apply(this, args));
            }
            if (ngZone.isStable && insideZoneEvents.includes(eventName)) {
                return ngZone.run(() => this.callBase.apply(this, args));
            }
            return this.callBase.apply(this, args);
        },
        isElementNode(element) {
            return element && element.nodeType === 1;
        },
        isTextNode(element) {
            return element && element.nodeType === 3;
        },
        isDocument(element) {
            return element && element.nodeType === 9;
        },
    });
    httpRequest.inject({
        getXhr() {
            if (!xhrFactory) {
                return this.callBase.apply(this);
            }
            const _xhr = xhrFactory.build();
            if (!('withCredentials' in _xhr)) {
                _xhr.withCredentials = false;
            }
            return _xhr;
        },
    });
    const runReadyCallbacksInZone = () => {
        ngZone.run(() => {
            eventsEngine.set({});
            callbacks.forEach((callback) => originalAdd.call(null, callback));
            callbacks = [];
            readyCallbacks.fire();
        });
    };
    runReadyCallbacksInZone();
    readyCallbackAdd = (callback) => ngZone.run(() => callback());
    doInjections = runReadyCallbacksInZone;
};
export class DxIntegrationModule {
    constructor(document, ngZone, xhrFactory) {
        doInjections(document, ngZone, xhrFactory);
    }
}
/** @nocollapse */ DxIntegrationModule.ɵfac = function DxIntegrationModule_Factory(t) { return new (t || DxIntegrationModule)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.XhrFactory, 8)); };
/** @nocollapse */ DxIntegrationModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxIntegrationModule });
/** @nocollapse */ DxIntegrationModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxIntegrationModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: i0.NgZone }, { type: i1.XhrFactory, decorators: [{
                type: Optional
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,